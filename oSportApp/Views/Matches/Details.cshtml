@model oSportApp.Models.Match

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    #map {
        height: 400px;
        width: 400px;
    }
</style>

<body onload="initialize()">
    <div class="row">
        <div id="map"></div>
    </div>
    <script>

        var geocoder;
        var map;
        function initialize() {
            geocoder = new google.maps.Geocoder();
            var latlng = new google.maps.LatLng(43.0389, -87.9065);
            var mapOptions = {
                zoom: 8,
                center: latlng
            }
            map = new google.maps.Map(document.getElementById('map'), mapOptions);
            codeAddress();
        }

        function codeAddress() {
            var addressArray = [];
            addressArray.push("@Model.Field.StreetAddress + @Model.Field.City + @Model.Field.State");
            var address = addressArray[0];
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {            infoWindow.setPosition(pos);            infoWindow.setContent(browserHasGeolocation ?                'Error: The Geolocation service failed.' :                'Error: Your browser doesn\'t support geolocation.');            infoWindow.open(map);        }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=@API_KEYS.Google_API_Key" async defer></script>


</body>
